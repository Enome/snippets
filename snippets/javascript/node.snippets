snippet mod
	var ${1:Module} = {
	  ${0}
	};

	export default $1;
snippet modf
	var ${1:Module} = () => {
	  ${0}
	};

	export default $1;
snippet req
	var ${1:module} = require('${0}$1');
snippet imp
	import ${1:module} from '${0}$1';
snippet self
	var self = this;${0}
snippet , f
	() => {
	});
snippet chai
	import {expect} from 'chai';
snippet test
	/*global describe, it*/

	import {expect} from 'chai';

	describe('${1}', () => {
	  ${2}
	});
snippet jest
	/*global test, expect*/

	test('${1} -> ${2}', () => {
		${3}var result = {};
		var expected = {};
		expect(result).toEqual(expected);
	});
snippet j
	test('${1} -> ${2}', () => {
		${3}var result = {};
		var expected = {};
		expect(result).toEqual(expected);
	});
snippet ava
	import test from 'ava';

	test('${1} -> ${2}', t => {
		${3}var result = {};
		var expected = {};
		t.deepEqual(result, expected);
	});
snippet t
	test('${1} -> ${2}', t => {
		${3}var result = {};
		var expected = {};
		t.deepEqual(result, expected);
	});
snippet expect
	expect(${1}).to.eql(${2});
snippet describe
	describe('${1}', () => {
	  ${2}
	});
snippet it
	it('${1}', () => {
		${2}	  
		var result = {};
		var expected = {};

		expect(result).to.eql(expected);

	});
